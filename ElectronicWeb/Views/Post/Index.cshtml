@*
/*********************************************************************
 *
 * PROPRIETARY and CONFIDENTIAL
 *
 * This is licensed from, and is trade secret of:
 *
 *          Group 10 - PRN231 - SU23
 *          FPT University, Education and Training zone
 *          Hoa Lac Hi-tech Park, Km29, Thang Long Highway
 *          Ha Noi, Viet Nam
 *
 * Refer to your License Agreement for restrictions on use,
 * duplication, or disclosure
 *
 * RESTRICTED RIGHTS LEGEND
 *
 * Use, duplication or disclosure is the
 * subject to restriction in Articles 736 and 738 of the
 * 2005 Civil Code, the Intellectual Property Law and Decree
 * No. 85/2011/ND-CP amending and supplementing a number of
 * articles of Decree 100/ND-CP/2006 of the Government of Viet Nam
 *
 *
 * Copy right 2023 © PRN231 - SU23 - Group 10 ®. All Rights Reserved
 *
 * Unpublished - All rights reserved under the copyright laws
 * of the Government of Viet Nam
*********************************************************************/
*@
@using ElectronicMedia.Core.Repository.Entity;
@using ElectronicMedia.Core.Repository.Models;
@using ElectronicWeb.Models;
@{
    Layout = "_AdminLayout";
}

<table class="table">
    <thead>
        <tr>
            <th>Title</th>
            <th>Content</th>
            <th>AuthorName</th>
            <th>CreatedDate</th>
            <th>PublishedDate</th>
            @*<th>UpdatedDate</th>*@
            <th>Rate</th>
            <th>Like</th>
            <th>Dislike</th>
            <th>Status</th>
            <th style="width:95%">Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (PostViewModel p in Model.Values)
        {
            <tr>
                <td style="width:40%">@p.Title</td>
                <td class="ellipsis first">
                    <span>@p.Content</span>
                </td>
                <td>@p.AuthorName</td>
                <td>@p.CreatedDate.ToString("dd/MM/yyyy")</td>
                <td>@p.PublishedDate.Value.ToString("dd/MM/yyyy")</td>
                @* <td>@p.UpdatedDate.Value.ToString("dd/MM/yyyy")</td>*@
                <td>@p.Rate</td>
                <td>@p.Like</td>
                <td>@p.Dislike</td>
                @if (p.Status.ToString() == "Pending")
                {
                    <td style="color:blue">@p.Status</td>
                }
                else if (p.Status.ToString() == "Approved")
                {
                    <td style="color:dodgerblue">@p.Status</td>
                }
                else if (p.Status.ToString() == "Published")
                {
                    <td style="color:green">@p.Status</td>
                }
                else
                {
                    <td style="color:red">@p.Status</td>
                }

                <td class="button-cell">
                    <a asp-controller="Post" asp-action="Detail" asp-route-pid="@p.Id" type="button" class="btn btn-success"><i class="bi bi-eye"></i></a>
                    <a asp-controller="Post" asp-action="Update" asp-route-pid="@p.Id" type="button" class="btn btn-primary"><i class="bi bi-pen"></i></a>
                    <a asp-controller="Post" asp-action="Delete" asp-route-pid="@p.Id" type="button" class="btn btn-danger"><i class="bi bi-trash"></i></a>

                </td>


            </tr>
        }

    </tbody>
</table>

<div>
    @if (Model.TotalPages > 0)
    {
        <ul class="pagination justify-content-center">
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-controller="Post" asp-action="Index" asp-route-currentPage="1">First</a>
                </li>
                <li class="page-item">
                    <a class="page-link" aria-label="Previous" asp-controller="Post" asp-action="Index" asp-route-currentPage="@(Model.CurrentPage -1)"> <span aria-hidden="true">&laquo;</span></a>
                </li>
            }
            @{
                int start = Model.CurrentPage - 5;
                int end = Model.CurrentPage + 4;
                if (start <= 0)
                {
                    end = end - (start - 1);
                    start = 1;
                }
                if (end > Model.TotalPages)
                {
                    end = Model.TotalPages;
                    if (end > 10)
                    {
                        start = end - 9;
                    }
                }
            }
            @for (int i = start; i <= end; i++)
            {
                <li class="page-item @(i == Model.CurrentPage?"active":"")">
                    <a class="page-link" asp-controller="Post" asp-action="Index" asp-route-currentPage="@i">@i</a>
                </li>
            }
            @if (Model.CurrentPage < Model.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" aria-label="Next" asp-controller="Post" asp-action="Index" asp-route-currentPage="@(Model.CurrentPage + 1)"><span aria-hidden="true">&raquo;</span></a>
                </li>
                <li class="page-item">
                    <a class="page-link" asp-controller="Post" asp-action="Index" asp-route-currentPage="@(Model.TotalPages)">Last</a>
                </li>
            }
        </ul>
    }
</div>
<style>
    table {
        width: 100%;
    }

    .button-cell {
        display: grid;
        grid-template-columns: repeat(3, auto);
        justify-content: end;
        align-items: center;
        gap: 10px; /* Adjust this value to set the space between buttons */
    }

    .first {
        width: 70%;
    }

    .ellipsis {
        position: relative;
    }

        .ellipsis:before {
            content: ' ';
            visibility: hidden;
        }

        .ellipsis span {
            position: absolute;
            left: 0;
            right: 0;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
</style>